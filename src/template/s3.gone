package template

import (
	"io/ioutil"
	"os"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/session"
	"github.com/aws/aws-sdk-go/service/s3"
	"github.com/aws/aws-sdk-go/service/s3/s3manager"
)

func get(path string) (string, error) {
	sess := session.Must(session.NewSession(&aws.Config{
		Region: aws.String("us-east-1"),
	}))

	downloader := s3manager.NewDownloader(sess)

	filename := "/tmp/template.html"

	file, err := os.Create(filename)

	_, err = downloader.Download(file, &s3.GetObjectInput{
		Bucket: aws.String(bucket),
		Key:    aws.String(path),
	})

	buf, err := ioutil.ReadFile(filename)
	if err != nil {
		// General collector of errors. Not sure if this is an antipattern
		return "", err
	}
	return string(buf), nil
}
